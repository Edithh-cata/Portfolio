{"pageProps":{"post":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    p: \"p\",\n    img: \"img\",\n    pre: \"pre\",\n    code: \"code\",\n    span: \"span\",\n    h2: \"h2\",\n    strong: \"strong\",\n    hr: \"hr\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"padronizando-nomenclatura-de-classes-utilizando-o-css-pattern-bem\",\n      children: _jsx(_components.a, {\n        href: \"#padronizando-nomenclatura-de-classes-utilizando-o-css-pattern-bem\",\n        children: \"Padronizando nomenclatura de classes utilizando o CSS Pattern BEM\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/padronizando-nomenclatura-de-classes-utilizando-bem.png\",\n        alt: \"Banner da postagem\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A metodologia Bloco (Block), Elemento (Element), Modificador (Modifier) (BEM) √© o nome popular de um CSS Pattern ou conven√ß√£o de classes que tem como objetivo ajudar os desenvolvedores a entender melhor a rela√ß√£o de nomenclatura de classes.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"O nome de uma classe utilizando a metodologia BEM √© dividida em tr√™s partes:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-attr\",\n          children: \"[block]\"\n        }), \"__\", _jsx(_components.span, {\n          className: \"hljs-selector-attr\",\n          children: \"[element]\"\n        }), \"--\", _jsx(_components.span, {\n          className: \"hljs-selector-attr\",\n          children: \"[modifier]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Para entender melhor essa metodologia temos que saber o que quer dizer o Block, Element, Modifier ‚Äî esses tr√™s pilares s√£o as bases dessa metodologia e tamb√©m s√£o as categorias nas quais vamos dividir nossos elementos.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"o-que-√©-bloco\",\n      children: _jsx(_components.a, {\n        href: \"#o-que-√©-bloco\",\n        children: \"O que √© Bloco?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Blocos podem ser definidos como componentes que s√£o maiores e/ou reutiliz√°veis na sua aplica√ß√£o. Pense nesses elementos como sendo o pai, uma vez que os Elementos e os Modificadores estar√£o dentro deles. Por exemplo: menu, cabe√ßalho, card, rodap√©, etc‚Ä¶\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/post2-1.png\",\n        alt: \"Block\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"o-que-√©-elemento\",\n      children: _jsx(_components.a, {\n        href: \"#o-que-√©-elemento\",\n        children: \"O que √© Elemento?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Elementos s√£o filhos dos Blocos. Vale ressaltar que um Elemento s√≥ pode ter apenas um pai. Por exemplo: item do menu, t√≠tulo do card, redes sociais do rodap√©, etc‚Ä¶\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Elementos t√™m uma regra espec√≠fica de escrita, sendo uma classe CSS composta de Nome do Bloco + dois underlines + nome do Elemento: .[Bloco]__[Elemento].\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Por exemplo, se voc√™ tem um Bloco .card, um Elemento dele pode ser .card\", _jsx(_components.strong, {\n        children: \"item ou .card\"\n      }), \"link.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Dentro das regras de escrita de BEM, esses dois underlines representam um Elemento. Perceba que isso n√£o viola as regras de nomenclatura de CSS, ao mesmo tempo em que deixa clar√≠ssimo do qu√™ se trata, pois √© de conhecimento geral que __ √© um Elemento de BEM.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/post2-2.png\",\n        alt: \"Element\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"o-que-√©-modificador\",\n      children: _jsx(_components.a, {\n        href: \"#o-que-√©-modificador\",\n        children: \"O que √© Modificador?\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Modificadores representam os diferentes estados ou estilos que um Elemento ou Bloco podem ter. Por exemplo: escondido, visivel, tem fundo, tem borda, borda redonda, etc‚Ä¶\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Sua regra de escrita √© uma classe composta pelo nome de um Bloco ou Modificador + dois h√≠fens + o nome do Modificador: [Bloco]__[Elemento]--[Modificador].\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Seguindo o exemplo, poderia haver um modificador para o card .card__link--hover para um vers√£o escura;\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/post2-3.png\",\n        alt: \"Modifier\"\n      })\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h3, {\n      id: \"momento-an√∫ncio-\",\n      children: _jsx(_components.a, {\n        href: \"#momento-an√∫ncio-\",\n        children: \"Momento an√∫ncio üòÅü§ò\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Quer aprender desenvolvimento frontend do zero?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"O \", _jsx(_components.a, {\n        href: \"https://iuricode.com/efront/\",\n        children: \"eFront\"\n      }), \" √© um ebook criado por mim onde eu ensino \", _jsx(_components.strong, {\n        children: \"HTML, CSS, JavaScript, Sass, Bootstrap, React, React Router, TypeScript, styled-components, Tailwind CSS, React Hook Form, Radix UI, Storybook, Cypress e Next.js\"\n      }), \". Tudo isso √© ensinado com uma did√°tica simples que at√© quem est√° iniciando na √°rea consegue aprender a utilizar cada tecnologia do ebook.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"/efront.png\",\n        alt: \"Banner do eFront\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Mais de \", _jsx(_components.strong, {\n        children: \"9.000 pessoas j√° compraram\"\n      }), \", voc√™ vem comigo?\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"üëâ \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://iuricode.com/efront/\",\n          children: \"Acessar o link da venda\"\n        })\n      })]\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n      id: \"exemplo-pr√°tico-de-bem\",\n      children: _jsx(_components.a, {\n        href: \"#exemplo-pr√°tico-de-bem\",\n        children: \"Exemplo pr√°tico de BEM\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Agora que o Bloco, Elemento e Modificador foram explicadas e suas conven√ß√µes de escrita apresentadas, irei apresentar um exemplo para melhor compreens√£o.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Seguindo o mesmo exemplo de um menu, vamos ter o seguinte c√≥digo HTML:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-html\",\n        children: [_jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"ul\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu\\\"\"\n          }), \">\"]\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"li\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu__item\\\"\"\n          }), \">\"]\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"a\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"href\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"#\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu__link\\\"\"\n          }), \">\"]\n        }), \"Item 1\", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"a\"\n          }), \">\"]\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"li\"\n          }), \">\"]\n        }), \"\\n\\n  \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"li\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu__item\\\"\"\n          }), \">\"]\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"a\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"href\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"#\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu__link menu__link--disabled\\\"\"\n          }), \">\"]\n        }), \"Item 2\", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"a\"\n          }), \">\"]\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"li\"\n          }), \">\"]\n        }), \"\\n\\n  \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"li\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu__item\\\"\"\n          }), \">\"]\n        }), \"\\n    \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"<\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"a\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"href\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"#\\\"\"\n          }), \" \", _jsx(_components.span, {\n            className: \"hljs-attr\",\n            children: \"class\"\n          }), \"=\", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"\\\"menu__link\\\"\"\n          }), \">\"]\n        }), \"Item 3\", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"a\"\n          }), \">\"]\n        }), \"\\n  \", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"li\"\n          }), \">\"]\n        }), \"\\n\", _jsxs(_components.span, {\n          className: \"hljs-tag\",\n          children: [\"</\", _jsx(_components.span, {\n            className: \"hljs-name\",\n            children: \"ul\"\n          }), \">\"]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Nosso CSS ficar√° assim:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-css\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".menu\"\n        }), \" {\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".menu__item\"\n        }), \" {\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".menu__link\"\n        }), \" {\\n}\\n\\n\", _jsx(_components.span, {\n          className: \"hljs-selector-class\",\n          children: \".menu__link--disabled\"\n        }), \" {\\n}\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"vantagens-de-utilizar-bem\",\n      children: _jsx(_components.a, {\n        href: \"#vantagens-de-utilizar-bem\",\n        children: \"Vantagens de utilizar BEM\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Vamos ver agora alguns benef√≠cios que a utiliza√ß√£o que uma metodologia como BEM pode trazer aos projetos e aos desenvolvedores.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"1---reutiliza√ß√£o-de-classes-pr√©-existentes\",\n      children: _jsx(_components.a, {\n        href: \"#1---reutiliza√ß√£o-de-classes-pr√©-existentes\",\n        children: \"1 - Reutiliza√ß√£o de classes pr√©-existentes\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Antes mesmo de criar um novo estilo para um bloco, podemos facilmente verificar quais os modificadores j√° existem no projeto. Caso j√° exista um que te atenda, n√£o ser√° necess√°rio criar outro o que contribui para evitar CSS legado ou desconhecido.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"2---melhor-entendimento-no-html\",\n      children: _jsx(_components.a, {\n        href: \"#2---melhor-entendimento-no-html\",\n        children: \"2 - Melhor entendimento no HTML\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ao ler o c√≥digo HTML, j√° √© poss√≠vel entender rapidamente qual elemento depende de qual, e replicar isso de maneira f√°cil nas outras partes do projeto.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"3---comunica√ß√£o-do-time\",\n      children: _jsx(_components.a, {\n        href: \"#3---comunica√ß√£o-do-time\",\n        children: \"3 - Comunica√ß√£o do time\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Os componentes ser√£o nomeados de forma que facilite a comunica√ß√£o entre os desenvolvedores e outros membros do time.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"4---manuten√ß√£o-no-c√≥digo\",\n      children: _jsx(_components.a, {\n        href: \"#4---manuten√ß√£o-no-c√≥digo\",\n        children: \"4 - Manuten√ß√£o no c√≥digo\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A utiliza√ß√£o do BEM contribui para que os desenvolvedores tenham menos receio de fazer mudan√ßas no c√≥digo por n√£o saberem o quanto aquilo pode afetar outros m√≥dulos.\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"E a√≠, gostou da postagem? Me manda um feedback no \", _jsx(_components.a, {\n        href: \"https://www.instagram.com/iuricode/\",\n        children: \"Instagram\"\n      }), \" para melhorar cada vez mais! üòÅ\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Esse projeto √© \", _jsx(_components.strong, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/iuricode/blog\",\n          children: \"open source\"\n        })\n      }), \", ent√£o basta adicionar uma nova feature e abrir um pull-request. Dessa maneira voc√™ ir√° contribuir com a comunidade.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"meta":{"slug":"padronizando-nomenclatura-de-classes-utilizando-bem","excerpt":"A metodologia Block, Element, Modifier (BEM) √© o nome popular de um CSS Pattern ou conven√ß√£o de classes.","title":"Padronizando nomenclatura de classes utilizando o CSS Pattern BEM","tags":["BEM","CSS","Pattern"],"date":"Wed Mar 01 2023 00:00:00 GMT+0000 (Coordinated Universal Time)"}}},"__N_SSG":true}